{"version":3,"sources":["index.scss","styles/scss/base/mixins/_rem.scss","styles/scss/base/_variables.scss","themes/reset.scss","../../styles/scss/base/mixins/_margin-auto.scss","../../styles/scss/base/mixins/_display_flex.scss","../../styles/scss/base/mixins/_flex.scss","EditorWindow.scss","../../../styles/scss/base/mixins/_rounded-corners.scss","../../../styles/scss/base/mixins/_box-shadow.scss","../../../styles/scss/base/_extends.scss","../../../styles/scss/base/mixins/_display_flex.scss","../../../styles/scss/base/mixins/_flex.scss","SnippetViewer.scss","../../styles/scss/base/mixins/_box-shadow.scss"],"names":[],"mappings":"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","file":"main.6627df33.chunk.css","sourcesContent":["@import '../../styles/scss/base/base';\n\n.container {\n  @include box-shadow-1(rgba(0, 0, 0, 0.3) 0 1px 4px -1px);\n\n  display: block;\n  position: fixed;\n  top: 10px;\n  right: 10px;\n  background: rgba(71, 207, 115, 0.63);\n  color: #fff;\n  padding: 10px 20px;\n  border-radius: 5px;\n  width: 100px;\n  text-align: center;\n}\n","//------ SASS Useful Mixins ---------------------------------------------\n\n// by Ryan Burgess\n// https://github.com/ryanburgess/SASS-Useful-Mixins\n// MIT Â© Ryan Burgess\n\n// ----------------------------------------------------------------------\n\n// REM Units with PX fallback\n\n// ----------------------------------------------------------------------\n\n// example: @include rem(\"margin\", 10, 5, 10, 5);\n// example: @include rem(\"font-size\", 14);\n\n@mixin rem($property, $values...) {\n  $n: length($values);\n  $i: 1;\n\n  $pxlist: ();\n  $remlist: ();\n\n  @while $i <= $n {\n    $itemVal: (nth($values, $i));\n\n    @if $itemVal != 'auto' {\n      $pxlist: append($pxlist, $itemVal + px);\n      //$remlist: append($remlist, ($itemVal / 10) + rem); // Use this if you've set HTML font size value to 62.5%\n      $remlist: append($remlist, ($itemVal / 16) + rem);\n    }\n\n @else {\n      $pxlist: append($pxlist, auto);\n      $remlist: append($remlist, auto);\n    }\n\n    $i: $i + 1;\n  }\n\n  #{$property}: $pxlist;\n  #{$property}: $remlist;\n}\n","// ----------------------------------------------------------------------\n// Font Sizes\n// ----------------------------------------------------------------------\n$regularSize: 14;\n$desktopSize: 860;\n\n// ----------------------------------------------------------------------\n// Font Families\n// ----------------------------------------------------------------------\n$roboto: 'Roboto', sans-serif;\n\n// ----------------------------------------------------------------------\n// styles\n// ----------------------------------------------------------------------\n$appBgColor: linear-gradient(45deg, #007af5, #0080ff) !default;\n\n$appSecondaryColor: #fff !default;\n","/* http://meyerweb.com/eric/tools/css/reset/\n   v2.0-modified | 20110126\n   License: none (public domain)\n*/\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  vertical-align: baseline;\n}\n\ntextarea,\ninput,\npre {\n  resize: vertical;\n  box-sizing: border-box;\n}\n\n/* make sure to set some focus styles for accessibility */\n:focus {\n  outline: 0;\n}\n\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\n\nbody {\n  line-height: 1;\n}\n\nol,\nul {\n  list-style: none;\n}\n\nblockquote,\nq {\n  quotes: none;\n}\n\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: '';\n  content: none;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\ninput[type='search']::-webkit-search-cancel-button,\ninput[type='search']::-webkit-search-decoration,\ninput[type='search']::-webkit-search-results-button,\ninput[type='search']::-webkit-search-results-decoration {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n}\n\ninput[type='search'] {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  -webkit-box-sizing: content-box;\n  -moz-box-sizing: content-box;\n  box-sizing: content-box;\n}\n\ntextarea {\n  overflow: auto;\n  vertical-align: top;\n  resize: vertical;\n}\n\n/**\n * Correct `inline-block` display not defined in IE 6/7/8/9 and Firefox 3.\n */\n\naudio,\ncanvas,\nvideo {\n  display: inline-block;\n  *display: inline;\n  *zoom: 1;\n  max-width: 100%;\n}\n\n/**\n * Prevent modern browsers from displaying `audio` without controls.\n * Remove excess height in iOS 5 devices.\n */\n\naudio:not([controls]) {\n  display: none;\n  height: 0;\n}\n\n/**\n * Address styling not present in IE 7/8/9, Firefox 3, and Safari 4.\n * Known issue: no IE 6 support.\n */\n\n[hidden] {\n  display: none;\n}\n\n/**\n * 1. Correct text resizing oddly in IE 6/7 when body `font-size` is set using\n *    `em` units.\n * 2. Prevent iOS text size adjust after orientation change, without disabling\n *    user zoom.\n */\n\nhtml {\n  font-size: 100%; /* 1 */\n  -webkit-text-size-adjust: 100%; /* 2 */\n  -ms-text-size-adjust: 100%; /* 2 */\n}\n\n/**\n * Address `outline` inconsistency between Chrome and other browsers.\n */\n\na:focus {\n  outline: thin dotted;\n}\n\n/**\n * Improve readability when focused and also mouse hovered in all browsers.\n */\n\na:active,\na:hover {\n  outline: 0;\n}\n\n/**\n * 1. Remove border when inside `a` element in IE 6/7/8/9 and Firefox 3.\n * 2. Improve image quality when scaled in IE 7.\n */\n\nimg {\n  border: 0; /* 1 */\n  -ms-interpolation-mode: bicubic; /* 2 */\n}\n\n/**\n * Address margin not present in IE 6/7/8/9, Safari 5, and Opera 11.\n */\n\nfigure {\n  margin: 0;\n}\n\n/**\n * Correct margin displayed oddly in IE 6/7.\n */\n\nform {\n  margin: 0;\n}\n\n/**\n * Define consistent border, margin, and padding.\n */\n\nfieldset {\n  border: 1px solid #c0c0c0;\n  margin: 0 2px;\n  padding: 0.35em 0.625em 0.75em;\n}\n\n/**\n * 1. Correct color not being inherited in IE 6/7/8/9.\n * 2. Correct text not wrapping in Firefox 3.\n * 3. Correct alignment displayed oddly in IE 6/7.\n */\n\nlegend {\n  border: 0; /* 1 */\n  padding: 0;\n  white-space: normal; /* 2 */\n  *margin-left: -7px; /* 3 */\n}\n\n/**\n * 1. Correct font size not being inherited in all browsers.\n * 2. Address margins set differently in IE 6/7, Firefox 3+, Safari 5,\n *    and Chrome.\n * 3. Improve appearance and consistency in all browsers.\n */\n\nbutton,\ninput,\nselect,\ntextarea {\n  font-size: 100%; /* 1 */\n  margin: 0; /* 2 */\n  vertical-align: baseline; /* 3 */\n  *vertical-align: middle; /* 3 */\n}\n\n/**\n * Address Firefox 3+ setting `line-height` on `input` using `!important` in\n * the UA stylesheet.\n */\n\nbutton,\ninput {\n  line-height: normal;\n}\n\n/**\n * Address inconsistent `text-transform` inheritance for `button` and `select`.\n * All other form control elements do not inherit `text-transform` values.\n * Correct `button` style inheritance in Chrome, Safari 5+, and IE 6+.\n * Correct `select` style inheritance in Firefox 4+ and Opera.\n */\n\nbutton,\nselect {\n  text-transform: none;\n}\n\n/**\n * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`\n *    and `video` controls.\n * 2. Correct inability to style clickable `input` types in iOS.\n * 3. Improve usability and consistency of cursor style between image-type\n *    `input` and others.\n * 4. Remove inner spacing in IE 7 without affecting normal text inputs.\n *    Known issue: inner spacing remains in IE 6.\n */\n\nbutton,\nhtml input[type=\"button\"], /* 1 */\ninput[type=\"reset\"],\ninput[type=\"submit\"] {\n  -webkit-appearance: button; /* 2 */\n  cursor: pointer; /* 3 */\n  *overflow: visible; /* 4 */\n}\n\n/**\n * Re-set default cursor for disabled elements.\n */\n\nbutton[disabled],\nhtml input[disabled] {\n  cursor: default;\n}\n\n/**\n * 1. Address box sizing set to content-box in IE 8/9.\n * 2. Remove excess padding in IE 8/9.\n * 3. Remove excess padding in IE 7.\n *    Known issue: excess padding remains in IE 6.\n */\n\ninput[type='checkbox'],\ninput[type='radio'] {\n  box-sizing: border-box; /* 1 */\n  padding: 0; /* 2 */\n  *height: 13px; /* 3 */\n  *width: 13px; /* 3 */\n}\n\n/**\n * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.\n * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome\n *    (include `-moz` to future-proof).\n */\n\ninput[type='search'] {\n  -webkit-appearance: textfield; /* 1 */\n  -moz-box-sizing: content-box;\n  -webkit-box-sizing: content-box; /* 2 */\n  box-sizing: content-box;\n}\n\n/**\n * Remove inner padding and search cancel button in Safari 5 and Chrome\n * on OS X.\n */\n\ninput[type='search']::-webkit-search-cancel-button,\ninput[type='search']::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n/**\n * Remove inner padding and border in Firefox 3+.\n */\n\nbutton::-moz-focus-inner,\ninput::-moz-focus-inner {\n  border: 0;\n  padding: 0;\n}\n\n/**\n * 1. Remove default vertical scrollbar in IE 6/7/8/9.\n * 2. Improve readability and alignment in all browsers.\n */\n\ntextarea {\n  overflow: auto; /* 1 */\n  vertical-align: top; /* 2 */\n}\n\n/**\n * Remove most spacing between table cells.\n */\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\nhtml,\nbutton,\ninput,\nselect,\ntextarea {\n  color: #222;\n}\n\n::-moz-selection {\n  background: #b3d4fc;\n  text-shadow: none;\n}\n\n::selection {\n  background: #b3d4fc;\n  text-shadow: none;\n}\n\nimg {\n  vertical-align: middle;\n}\n\nfieldset {\n  border: 0;\n  margin: 0;\n  padding: 0;\n}\n\ntextarea {\n  resize: vertical;\n}\n\n.chromeframe {\n  margin: 0.2em 0;\n  background: #ccc;\n  color: #000;\n  padding: 0.2em 0;\n}\n","//------ SASS Useful Mixins ---------------------------------------------\n\n// by Ryan Burgess\n// https://github.com/ryanburgess/SASS-Useful-Mixins\n// MIT Â© Ryan Burgess\n\n// ----------------------------------------------------------------------\n\n// Margin auto\n\n// ----------------------------------------------------------------------\n\n// example: @include margin-auto();\n\n@mixin margin-auto() {\n  margin-left: auto;\n  margin-right: auto;\n}\n","@mixin display_flex() {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n}\n","// Flexbox Mixins\n// http://philipwalton.github.io/solved-by-flexbox/\n// https://github.com/philipwalton/solved-by-flexbox\n//\n// Copyright (c) 2013 Brian Franco\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n// This is a set of mixins for those who want to mess around with flexbox\n// using the native support of current browsers. For full support table\n// check: http://caniuse.com/flexbox\n//\n// Basically this will use:\n//\n// * Fallback, old syntax (IE10, mobile webkit browsers - no wrapping)\n// * Final standards syntax (FF, Safari, Chrome, IE11, Opera)\n//\n// This was inspired by:\n//\n// * http://dev.opera.com/articles/view/advanced-cross-browser-flexbox/\n//\n// With help from:\n//\n// * http://w3.org/tr/css3-flexbox/\n// * http://the-echoplex.net/flexyboxes/\n// * http://msdn.microsoft.com/en-us/library/ie/hh772069(v=vs.85).aspx\n// * http://css-tricks.com/using-flexbox/\n// * http://dev.opera.com/articles/view/advanced-cross-browser-flexbox/\n// * https://developer.mozilla.org/en-us/docs/web/guide/css/flexible_boxes\n\n//----------------------------------------------------------------------\n\n// Flexbox Containers\n//\n// The 'flex' value causes an element to generate a block-level flex\n// container box.\n//\n// The 'inline-flex' value causes an element to generate a inline-level\n// flex container box.\n//\n// display: flex | inline-flex\n//\n// http://w3.org/tr/css3-flexbox/#flex-containers\n//\n// (Placeholder selectors for each type, for those who rather @extend)\n\n@mixin flexbox {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -moz-flex;\n  display: -ms-flexbox;\n  display: flex;\n}\n\n%flexbox {\n  @include flexbox;\n}\n\n//----------------------------------\n\n@mixin inline-flex {\n  display: -webkit-inline-box;\n  display: -webkit-inline-flex;\n  display: -moz-inline-flex;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n}\n\n%inline-flex {\n  @include inline-flex;\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Direction\n//\n// The 'flex-direction' property specifies how flex items are placed in\n// the flex container, by setting the direction of the flex container's\n// main axis. This determines the direction that flex items are laid out in.\n//\n// Values: row | row-reverse | column | column-reverse\n// Default: row\n//\n// http://w3.org/tr/css3-flexbox/#flex-direction-property\n\n@mixin flex-direction($value: row) {\n  @if $value == row-reverse {\n    -webkit-box-direction: reverse;\n    -webkit-box-orient: horizontal;\n  }\n\n @else if $value == column {\n    -webkit-box-direction: normal;\n    -webkit-box-orient: vertical;\n  }\n\n @else if $value == column-reverse {\n    -webkit-box-direction: reverse;\n    -webkit-box-orient: vertical;\n  }\n\n @else {\n    -webkit-box-direction: normal;\n    -webkit-box-orient: horizontal;\n  }\n\n  -webkit-flex-direction: $value;\n  -moz-flex-direction: $value;\n  -ms-flex-direction: $value;\n  flex-direction: $value;\n}\n// Shorter version:\n@mixin flex-dir($args...) {\n  @include flex-direction($args...);\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Wrap\n//\n// The 'flex-wrap' property controls whether the flex container is single-line\n// or multi-line, and the direction of the cross-axis, which determines\n// the direction new lines are stacked in.\n//\n// Values: nowrap | wrap | wrap-reverse\n// Default: nowrap\n//\n// http://w3.org/tr/css3-flexbox/#flex-wrap-property\n\n@mixin flex-wrap($value: nowrap) {\n  // No Webkit Box fallback.\n  -webkit-flex-wrap: $value;\n  -moz-flex-wrap: $value;\n\n  @if $value == nowrap {\n    -ms-flex-wrap: none;\n  }\n\n @else {\n    -ms-flex-wrap: $value;\n  }\n\n  flex-wrap: $value;\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Flow (shorthand)\n//\n// The 'flex-flow' property is a shorthand for setting the 'flex-direction'\n// and 'flex-wrap' properties, which together define the flex container's\n// main and cross axes.\n//\n// Values: <flex-direction> | <flex-wrap>\n// Default: row nowrap\n//\n// http://w3.org/tr/css3-flexbox/#flex-flow-property\n\n@mixin flex-flow(\n  $values: (\n    row nowrap\n  )\n) {\n  // No Webkit Box fallback.\n  -webkit-flex-flow: $values;\n  -moz-flex-flow: $values;\n  -ms-flex-flow: $values;\n  flex-flow: $values;\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Order\n//\n// The 'order' property controls the order in which flex items appear within\n// their flex container, by assigning them to ordinal groups.\n//\n// Default: 0\n//\n// http://w3.org/tr/css3-flexbox/#order-property\n\n@mixin order($int: 0) {\n  -webkit-box-ordinal-group: $int + 1;\n  -webkit-order: $int;\n  -moz-order: $int;\n  -ms-flex-order: $int;\n  order: $int;\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Grow\n//\n// The 'flex-grow' property sets the flex grow factor. Negative numbers\n// are invalid.\n//\n// Default: 0\n//\n// http://w3.org/tr/css3-flexbox/#flex-grow-property\n\n@mixin flex-grow($int: 0) {\n  -webkit-box-flex: $int;\n  -webkit-flex-grow: $int;\n  -moz-flex-grow: $int;\n  -ms-flex-positive: $int;\n  flex-grow: $int;\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Shrink\n//\n// The 'flex-shrink' property sets the flex shrink factor. Negative numbers\n// are invalid.\n//\n// Default: 1\n//\n// http://w3.org/tr/css3-flexbox/#flex-shrink-property\n\n@mixin flex-shrink($int: 1) {\n  -webkit-flex-shrink: $int;\n  -moz-flex-shrink: $int;\n  -ms-flex-negative: $int;\n  flex-shrink: $int;\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Basis\n//\n// The 'flex-basis' property sets the flex basis. Negative lengths are invalid.\n//\n// Values: Like \"width\"\n// Default: auto\n//\n// http://www.w3.org/TR/css3-flexbox/#flex-basis-property\n\n@mixin flex-basis($value: auto) {\n  -webkit-flex-basis: $value;\n  -moz-flex-basis: $value;\n  -ms-flex-preferred-size: $value;\n  flex-basis: $value;\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox \"Flex\" (shorthand)\n//\n// The 'flex' property specifies the components of a flexible length: the\n// flex grow factor and flex shrink factor, and the flex basis. When an\n// element is a flex item, 'flex' is consulted instead of the main size\n// property to determine the main size of the element. If an element is\n// not a flex item, 'flex' has no effect.\n//\n// Values: none | <flex-grow> <flex-shrink> || <flex-basis>\n// Default: See individual properties (1 1 0).\n//\n// http://w3.org/tr/css3-flexbox/#flex-property\n\n@mixin flex($fg: 1, $fs: null, $fb: null) {\n  // Set a variable to be used by box-flex properties\n  $fg-boxflex: $fg;\n\n  // Box-Flex only supports a flex-grow value so let's grab the\n  // first item in the list and just return that.\n  @if type-of($fg) == 'list' {\n    $fg-boxflex: nth($fg, 1);\n  }\n\n  -webkit-box-flex: $fg-boxflex;\n  -webkit-flex: $fg $fs $fb;\n  -moz-box-flex: $fg-boxflex;\n  -moz-flex: $fg $fs $fb;\n  -ms-flex: $fg $fs $fb;\n  flex: $fg $fs $fb;\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Justify Content\n//\n// The 'justify-content' property aligns flex items along the main axis\n// of the current line of the flex container. This is done after any flexible\n// lengths and any auto margins have been resolved. Typically it helps distribute\n// extra free space leftover when either all the flex items on a line are\n// inflexible, or are flexible but have reached their maximum size. It also\n// exerts some control over the alignment of items when they overflow the line.\n//\n// Note: 'space-*' values not supported in older syntaxes.\n//\n// Values: flex-start | flex-end | center | space-between | space-around\n// Default: flex-start\n//\n// http://w3.org/tr/css3-flexbox/#justify-content-property\n\n@mixin justify-content($value: flex-start) {\n  @if $value == flex-start {\n    -webkit-box-pack: start;\n    -ms-flex-pack: start;\n  }\n\n @else if $value == flex-end {\n    -webkit-box-pack: end;\n    -ms-flex-pack: end;\n  }\n\n @else if $value == space-between {\n    -webkit-box-pack: justify;\n    -ms-flex-pack: justify;\n  }\n\n @else if $value == space-around {\n    -ms-flex-pack: distribute;\n  }\n\n @else {\n    -webkit-box-pack: $value;\n    -ms-flex-pack: $value;\n  }\n\n  -webkit-justify-content: $value;\n  -moz-justify-content: $value;\n  justify-content: $value;\n}\n// Shorter version:\n@mixin flex-just($args...) {\n  @include justify-content($args...);\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Align Items\n//\n// Flex items can be aligned in the cross axis of the current line of the\n// flex container, similar to 'justify-content' but in the perpendicular\n// direction. 'align-items' sets the default alignment for all of the flex\n// container's items, including anonymous flex items. 'align-self' allows\n// this default alignment to be overridden for individual flex items. (For\n// anonymous flex items, 'align-self' always matches the value of 'align-items'\n// on their associated flex container.)\n//\n// Values: flex-start | flex-end | center | baseline | stretch\n// Default: stretch\n//\n// http://w3.org/tr/css3-flexbox/#align-items-property\n\n@mixin align-items($value: stretch) {\n  @if $value == flex-start {\n    -webkit-box-align: start;\n    -ms-flex-align: start;\n  }\n\n @else if $value == flex-end {\n    -webkit-box-align: end;\n    -ms-flex-align: end;\n  }\n\n @else {\n    -webkit-box-align: $value;\n    -ms-flex-align: $value;\n  }\n\n  -webkit-align-items: $value;\n  -moz-align-items: $value;\n  align-items: $value;\n}\n\n//----------------------------------\n\n// Flexbox Align Self\n//\n// Values: auto | flex-start | flex-end | center | baseline | stretch\n// Default: auto\n\n@mixin align-self($value: auto) {\n  // No Webkit Box Fallback.\n  -webkit-align-self: $value;\n  -moz-align-self: $value;\n\n  @if $value == flex-start {\n    -ms-flex-item-align: start;\n  }\n\n @else if $value == flex-end {\n    -ms-flex-item-align: end;\n  }\n\n @else {\n    -ms-flex-item-align: $value;\n  }\n\n  align-self: $value;\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Align Content\n//\n// The 'align-content' property aligns a flex container's lines within the\n// flex container when there is extra space in the cross-axis, similar to\n// how 'justify-content' aligns individual items within the main-axis. Note,\n// this property has no effect when the flexbox has only a single line.\n//\n// Values: flex-start | flex-end | center | space-between | space-around | stretch\n// Default: stretch\n//\n// http://w3.org/tr/css3-flexbox/#align-content-property\n\n@mixin align-content($value: stretch) {\n  // No Webkit Box Fallback.\n  -webkit-align-content: $value;\n  -moz-align-content: $value;\n\n  @if $value == flex-start {\n    -ms-flex-line-pack: start;\n  }\n\n @else if $value == flex-end {\n    -ms-flex-line-pack: end;\n  }\n\n @else {\n    -ms-flex-line-pack: $value;\n  }\n\n  align-content: $value;\n}\n","@import '../../../styles/scss/base/base';\n\n.container {\n  @extend %window;\n\n  @include display_flex();\n  @include flex-direction(column);\n  @include flex-grow(1);\n\n  height: 400px;\n\n  textarea,\n  input {\n    border: 1px solid rgba(0, 85, 170, 0.33);\n    width: 100%;\n    height: 100%;\n    resize: none;\n    margin: 0;\n    padding: 10px 10px;\n  }\n\n  input {\n    & + input {\n      margin-top: 5px;\n    }\n\n    &.desc {\n      height: 40px;\n    }\n\n    &.tabTrigger {\n      height: 40px;\n    }\n  }\n\n  textarea {\n    margin-top: 5px;\n\n    &.snippet {\n      height: 100%;\n    }\n  }\n}\n","//------ SASS Useful Mixins ---------------------------------------------\n\n// by Ryan Burgess\n// https://github.com/ryanburgess/SASS-Useful-Mixins\n// MIT Â© Ryan Burgess\n\n// ----------------------------------------------------------------------\n\n// Rounded Corners\n\n// ----------------------------------------------------------------------\n\n// example: @include roundedCorners(10);\n\n@mixin roundedCorners($size) {\n  -webkit-border-radius: $size + px;\n  -moz-border-radius: $size + px;\n  border-radius: $size + px;\n}\n\n// Rounded Corners Top Only\n@mixin roundedTop($size) {\n  -webkit-border-radius: $size + px $size + px 0 0;\n  -moz-border-radius: $size + px $size + px 0 0;\n  border-radius: $size + px $size + px 0 0;\n}\n\n// Rounded Corner Top Left Only\n@mixin roundedTopLeft($size) {\n  -webkit-border-radius: $size + px 0 0 0;\n  -moz-border-radius: $size + px 0 0 0;\n  border-radius: $size + px 0 0 0;\n}\n\n// Rounded Corner Top Right Only\n@mixin roundedTopRight($size) {\n  -webkit-border-radius: 0 $size + px 0 0;\n  -moz-border-radius: 0 $size + px 0 0;\n  border-radius: 0 $size + px 0 0;\n}\n\n// Rounded Corners Bottom Only\n@mixin roundedBottom($size) {\n  -webkit-border-radius: 0 0 $size + px $size + px;\n  -moz-border-radius: 0 0 $size + px $size + px;\n  border-radius: 0 0 $size + px $size + px;\n}\n\n// Rounded Corner Bottom Left Only\n@mixin roundedBottomLeft($size) {\n  -webkit-border-radius: 0 0 0 $size + px;\n  -moz-border-radius: 0 0 0 $size + px;\n  border-radius: 0 0 0 $size + px;\n}\n\n// Rounded Corner Bottom Right Only\n@mixin roundedBottomRight($size) {\n  -webkit-border-radius: 0 0 $size + px 0;\n  -moz-border-radius: 0 0 $size + px 0;\n  border-radius: 0 0 $size + px 0;\n}\n\n// Rounded Corners Left Only\n@mixin roundedLeft($size) {\n  -webkit-border-radius: 0 0 $size + px $size + px;\n  -moz-border-radius: 0 0 $size + px $size + px;\n  border-radius: $size + px 0 0 $size + px;\n}\n\n// Rounded Corners Right Only\n@mixin roundedRight($size) {\n  -webkit-border-radius: 0 $size + px $size + px 0;\n  -moz-border-radius: 0 $size + px $size + px 0;\n  border-radius: 0 $size + px $size + px 0;\n}\n","//------ SASS Useful Mixins ---------------------------------------------\n\n// by Ryan Burgess\n// https://github.com/ryanburgess/SASS-Useful-Mixins\n// MIT Â© Ryan Burgess\n\n// ----------------------------------------------------------------------\n\n// Box Shadow\n\n// ----------------------------------------------------------------------\n\n// example: @include box-shadow(1px, 2px, 2px, 2px, #000);\n\n@mixin box-shadow(\n  $hoff: false,\n  $voff: false,\n  $blur: false,\n  $spread: false,\n  $color: false\n) {\n  -webkit-box-shadow: $hoff $voff $blur $spread $color;\n  -moz-box-shadow: $hoff $voff $blur $spread $color;\n  box-shadow: $hoff $voff $blur $spread $color;\n}\n\n@mixin box-shadow-1($value) {\n  -webkit-box-shadow: $value;\n  -moz-box-shadow: $value;\n  box-shadow: $value;\n}\n\n@mixin box-shadow-2($value1, $value2, $value3) {\n  -webkit-box-shadow: $value1, $value2, $value3;\n  -moz-box-shadow: $value1, $value2, $value3;\n  box-shadow: $value1, $value2, $value3;\n}\n","%marginAuto {\n  @include margin-auto();\n}\n\n%clearfix {\n  @include clearfix();\n}\n\n%inlineBlock {\n  @include inline-block();\n}\n\n%hideText {\n  @include hide-text();\n}\n\n%window {\n  @include roundedCorners(5);\n  @include box-shadow-2(\n    0 0 0 0 rgba(0, 0, 0, 0.3),\n    0 23px 38px 0 rgba(0, 0, 0, 0.43),\n    0 25px 65px 0 rgba(0, 0, 0, 0.1)\n  );\n\n  background: #fff;\n  padding: 30px;\n}\n","@mixin display_flex() {\n  display: -webkit-box;\n  display: -moz-box;\n  display: -ms-flexbox;\n  display: -webkit-flex;\n  display: flex;\n}\n","// Flexbox Mixins\n// http://philipwalton.github.io/solved-by-flexbox/\n// https://github.com/philipwalton/solved-by-flexbox\n//\n// Copyright (c) 2013 Brian Franco\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n// This is a set of mixins for those who want to mess around with flexbox\n// using the native support of current browsers. For full support table\n// check: http://caniuse.com/flexbox\n//\n// Basically this will use:\n//\n// * Fallback, old syntax (IE10, mobile webkit browsers - no wrapping)\n// * Final standards syntax (FF, Safari, Chrome, IE11, Opera)\n//\n// This was inspired by:\n//\n// * http://dev.opera.com/articles/view/advanced-cross-browser-flexbox/\n//\n// With help from:\n//\n// * http://w3.org/tr/css3-flexbox/\n// * http://the-echoplex.net/flexyboxes/\n// * http://msdn.microsoft.com/en-us/library/ie/hh772069(v=vs.85).aspx\n// * http://css-tricks.com/using-flexbox/\n// * http://dev.opera.com/articles/view/advanced-cross-browser-flexbox/\n// * https://developer.mozilla.org/en-us/docs/web/guide/css/flexible_boxes\n\n//----------------------------------------------------------------------\n\n// Flexbox Containers\n//\n// The 'flex' value causes an element to generate a block-level flex\n// container box.\n//\n// The 'inline-flex' value causes an element to generate a inline-level\n// flex container box.\n//\n// display: flex | inline-flex\n//\n// http://w3.org/tr/css3-flexbox/#flex-containers\n//\n// (Placeholder selectors for each type, for those who rather @extend)\n\n@mixin flexbox {\n  display: -webkit-box;\n  display: -webkit-flex;\n  display: -moz-flex;\n  display: -ms-flexbox;\n  display: flex;\n}\n\n%flexbox {\n  @include flexbox;\n}\n\n//----------------------------------\n\n@mixin inline-flex {\n  display: -webkit-inline-box;\n  display: -webkit-inline-flex;\n  display: -moz-inline-flex;\n  display: -ms-inline-flexbox;\n  display: inline-flex;\n}\n\n%inline-flex {\n  @include inline-flex;\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Direction\n//\n// The 'flex-direction' property specifies how flex items are placed in\n// the flex container, by setting the direction of the flex container's\n// main axis. This determines the direction that flex items are laid out in.\n//\n// Values: row | row-reverse | column | column-reverse\n// Default: row\n//\n// http://w3.org/tr/css3-flexbox/#flex-direction-property\n\n@mixin flex-direction($value: row) {\n  @if $value == row-reverse {\n    -webkit-box-direction: reverse;\n    -webkit-box-orient: horizontal;\n  }\n\n @else if $value == column {\n    -webkit-box-direction: normal;\n    -webkit-box-orient: vertical;\n  }\n\n @else if $value == column-reverse {\n    -webkit-box-direction: reverse;\n    -webkit-box-orient: vertical;\n  }\n\n @else {\n    -webkit-box-direction: normal;\n    -webkit-box-orient: horizontal;\n  }\n\n  -webkit-flex-direction: $value;\n  -moz-flex-direction: $value;\n  -ms-flex-direction: $value;\n  flex-direction: $value;\n}\n// Shorter version:\n@mixin flex-dir($args...) {\n  @include flex-direction($args...);\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Wrap\n//\n// The 'flex-wrap' property controls whether the flex container is single-line\n// or multi-line, and the direction of the cross-axis, which determines\n// the direction new lines are stacked in.\n//\n// Values: nowrap | wrap | wrap-reverse\n// Default: nowrap\n//\n// http://w3.org/tr/css3-flexbox/#flex-wrap-property\n\n@mixin flex-wrap($value: nowrap) {\n  // No Webkit Box fallback.\n  -webkit-flex-wrap: $value;\n  -moz-flex-wrap: $value;\n\n  @if $value == nowrap {\n    -ms-flex-wrap: none;\n  }\n\n @else {\n    -ms-flex-wrap: $value;\n  }\n\n  flex-wrap: $value;\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Flow (shorthand)\n//\n// The 'flex-flow' property is a shorthand for setting the 'flex-direction'\n// and 'flex-wrap' properties, which together define the flex container's\n// main and cross axes.\n//\n// Values: <flex-direction> | <flex-wrap>\n// Default: row nowrap\n//\n// http://w3.org/tr/css3-flexbox/#flex-flow-property\n\n@mixin flex-flow(\n  $values: (\n    row nowrap\n  )\n) {\n  // No Webkit Box fallback.\n  -webkit-flex-flow: $values;\n  -moz-flex-flow: $values;\n  -ms-flex-flow: $values;\n  flex-flow: $values;\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Order\n//\n// The 'order' property controls the order in which flex items appear within\n// their flex container, by assigning them to ordinal groups.\n//\n// Default: 0\n//\n// http://w3.org/tr/css3-flexbox/#order-property\n\n@mixin order($int: 0) {\n  -webkit-box-ordinal-group: $int + 1;\n  -webkit-order: $int;\n  -moz-order: $int;\n  -ms-flex-order: $int;\n  order: $int;\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Grow\n//\n// The 'flex-grow' property sets the flex grow factor. Negative numbers\n// are invalid.\n//\n// Default: 0\n//\n// http://w3.org/tr/css3-flexbox/#flex-grow-property\n\n@mixin flex-grow($int: 0) {\n  -webkit-box-flex: $int;\n  -webkit-flex-grow: $int;\n  -moz-flex-grow: $int;\n  -ms-flex-positive: $int;\n  flex-grow: $int;\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Shrink\n//\n// The 'flex-shrink' property sets the flex shrink factor. Negative numbers\n// are invalid.\n//\n// Default: 1\n//\n// http://w3.org/tr/css3-flexbox/#flex-shrink-property\n\n@mixin flex-shrink($int: 1) {\n  -webkit-flex-shrink: $int;\n  -moz-flex-shrink: $int;\n  -ms-flex-negative: $int;\n  flex-shrink: $int;\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Basis\n//\n// The 'flex-basis' property sets the flex basis. Negative lengths are invalid.\n//\n// Values: Like \"width\"\n// Default: auto\n//\n// http://www.w3.org/TR/css3-flexbox/#flex-basis-property\n\n@mixin flex-basis($value: auto) {\n  -webkit-flex-basis: $value;\n  -moz-flex-basis: $value;\n  -ms-flex-preferred-size: $value;\n  flex-basis: $value;\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox \"Flex\" (shorthand)\n//\n// The 'flex' property specifies the components of a flexible length: the\n// flex grow factor and flex shrink factor, and the flex basis. When an\n// element is a flex item, 'flex' is consulted instead of the main size\n// property to determine the main size of the element. If an element is\n// not a flex item, 'flex' has no effect.\n//\n// Values: none | <flex-grow> <flex-shrink> || <flex-basis>\n// Default: See individual properties (1 1 0).\n//\n// http://w3.org/tr/css3-flexbox/#flex-property\n\n@mixin flex($fg: 1, $fs: null, $fb: null) {\n  // Set a variable to be used by box-flex properties\n  $fg-boxflex: $fg;\n\n  // Box-Flex only supports a flex-grow value so let's grab the\n  // first item in the list and just return that.\n  @if type-of($fg) == 'list' {\n    $fg-boxflex: nth($fg, 1);\n  }\n\n  -webkit-box-flex: $fg-boxflex;\n  -webkit-flex: $fg $fs $fb;\n  -moz-box-flex: $fg-boxflex;\n  -moz-flex: $fg $fs $fb;\n  -ms-flex: $fg $fs $fb;\n  flex: $fg $fs $fb;\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Justify Content\n//\n// The 'justify-content' property aligns flex items along the main axis\n// of the current line of the flex container. This is done after any flexible\n// lengths and any auto margins have been resolved. Typically it helps distribute\n// extra free space leftover when either all the flex items on a line are\n// inflexible, or are flexible but have reached their maximum size. It also\n// exerts some control over the alignment of items when they overflow the line.\n//\n// Note: 'space-*' values not supported in older syntaxes.\n//\n// Values: flex-start | flex-end | center | space-between | space-around\n// Default: flex-start\n//\n// http://w3.org/tr/css3-flexbox/#justify-content-property\n\n@mixin justify-content($value: flex-start) {\n  @if $value == flex-start {\n    -webkit-box-pack: start;\n    -ms-flex-pack: start;\n  }\n\n @else if $value == flex-end {\n    -webkit-box-pack: end;\n    -ms-flex-pack: end;\n  }\n\n @else if $value == space-between {\n    -webkit-box-pack: justify;\n    -ms-flex-pack: justify;\n  }\n\n @else if $value == space-around {\n    -ms-flex-pack: distribute;\n  }\n\n @else {\n    -webkit-box-pack: $value;\n    -ms-flex-pack: $value;\n  }\n\n  -webkit-justify-content: $value;\n  -moz-justify-content: $value;\n  justify-content: $value;\n}\n// Shorter version:\n@mixin flex-just($args...) {\n  @include justify-content($args...);\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Align Items\n//\n// Flex items can be aligned in the cross axis of the current line of the\n// flex container, similar to 'justify-content' but in the perpendicular\n// direction. 'align-items' sets the default alignment for all of the flex\n// container's items, including anonymous flex items. 'align-self' allows\n// this default alignment to be overridden for individual flex items. (For\n// anonymous flex items, 'align-self' always matches the value of 'align-items'\n// on their associated flex container.)\n//\n// Values: flex-start | flex-end | center | baseline | stretch\n// Default: stretch\n//\n// http://w3.org/tr/css3-flexbox/#align-items-property\n\n@mixin align-items($value: stretch) {\n  @if $value == flex-start {\n    -webkit-box-align: start;\n    -ms-flex-align: start;\n  }\n\n @else if $value == flex-end {\n    -webkit-box-align: end;\n    -ms-flex-align: end;\n  }\n\n @else {\n    -webkit-box-align: $value;\n    -ms-flex-align: $value;\n  }\n\n  -webkit-align-items: $value;\n  -moz-align-items: $value;\n  align-items: $value;\n}\n\n//----------------------------------\n\n// Flexbox Align Self\n//\n// Values: auto | flex-start | flex-end | center | baseline | stretch\n// Default: auto\n\n@mixin align-self($value: auto) {\n  // No Webkit Box Fallback.\n  -webkit-align-self: $value;\n  -moz-align-self: $value;\n\n  @if $value == flex-start {\n    -ms-flex-item-align: start;\n  }\n\n @else if $value == flex-end {\n    -ms-flex-item-align: end;\n  }\n\n @else {\n    -ms-flex-item-align: $value;\n  }\n\n  align-self: $value;\n}\n\n//----------------------------------------------------------------------\n\n// Flexbox Align Content\n//\n// The 'align-content' property aligns a flex container's lines within the\n// flex container when there is extra space in the cross-axis, similar to\n// how 'justify-content' aligns individual items within the main-axis. Note,\n// this property has no effect when the flexbox has only a single line.\n//\n// Values: flex-start | flex-end | center | space-between | space-around | stretch\n// Default: stretch\n//\n// http://w3.org/tr/css3-flexbox/#align-content-property\n\n@mixin align-content($value: stretch) {\n  // No Webkit Box Fallback.\n  -webkit-align-content: $value;\n  -moz-align-content: $value;\n\n  @if $value == flex-start {\n    -ms-flex-line-pack: start;\n  }\n\n @else if $value == flex-end {\n    -ms-flex-line-pack: end;\n  }\n\n @else {\n    -ms-flex-line-pack: $value;\n  }\n\n  align-content: $value;\n}\n","@import '../../../styles/scss/base/base';\n\n.container {\n  @extend %window;\n\n  @include display_flex();\n  @include flex-direction(column);\n  @include flex-grow(1);\n\n  @media (min-width: #{$desktopSize}px) {\n    margin-left: 30px;\n    margin-top: 0;\n  }\n\n  overflow: hidden;\n  height: 400px;\n  margin-top: 10px;\n\n  .innerWrapper {\n    position: relative;\n    height: 100%;\n\n    .buttonWrapper {\n      position: absolute;\n      top: 10px;\n      right: 10px;\n\n      button {\n        @include box-shadow-1(rgba(0, 0, 0, 0.3) 0 1px 4px -1px);\n\n        background: #fff;\n        border: 2px solid #fff;\n        border-radius: 4px;\n\n        img {\n          width: auto;\n          height: 18px;\n        }\n\n        & + button {\n          margin-left: 5px;\n        }\n\n        &:hover {\n          background: #ccc;\n        }\n\n        &.isActive {\n          background: #e3e3e3;\n        }\n      }\n    }\n\n    pre {\n      width: 100%;\n      height: 100%;\n      font-size: 16px;\n      background: #fbfbfb;\n      border: 1px solid #e3e3e3;\n      padding: 10px;\n      line-height: 24px;\n      overflow: auto;\n      resize: none;\n    }\n\n    button.copyAll {\n      @include box-shadow-1(rgba(0, 0, 0, 0.3) 0 1px 4px -1px);\n\n      position: absolute;\n      bottom: 5px;\n      right: 5px;\n      border-radius: 4px;\n      background: linear-gradient(45deg, #007af5, #0080ff);\n      color: #fff;\n      height: 30px;\n      width: 75px;\n      border: none;\n\n      &:hover {\n        background: #0f6fd0;\n      }\n    }\n  }\n}\n","//------ SASS Useful Mixins ---------------------------------------------\n\n// by Ryan Burgess\n// https://github.com/ryanburgess/SASS-Useful-Mixins\n// MIT Â© Ryan Burgess\n\n// ----------------------------------------------------------------------\n\n// Box Shadow\n\n// ----------------------------------------------------------------------\n\n// example: @include box-shadow(1px, 2px, 2px, 2px, #000);\n\n@mixin box-shadow(\n  $hoff: false,\n  $voff: false,\n  $blur: false,\n  $spread: false,\n  $color: false\n) {\n  -webkit-box-shadow: $hoff $voff $blur $spread $color;\n  -moz-box-shadow: $hoff $voff $blur $spread $color;\n  box-shadow: $hoff $voff $blur $spread $color;\n}\n\n@mixin box-shadow-1($value) {\n  -webkit-box-shadow: $value;\n  -moz-box-shadow: $value;\n  box-shadow: $value;\n}\n\n@mixin box-shadow-2($value1, $value2, $value3) {\n  -webkit-box-shadow: $value1, $value2, $value3;\n  -moz-box-shadow: $value1, $value2, $value3;\n  box-shadow: $value1, $value2, $value3;\n}\n"]}